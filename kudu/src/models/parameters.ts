/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";

export const allowPrereleaseVersions: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "allowPrereleaseVersions"
  ],
  mapper: {
    serializedName: "allowPrereleaseVersions",
    type: {
      name: "Boolean"
    }
  }
};
export const allUsers: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "allUsers"
  ],
  mapper: {
    serializedName: "allUsers",
    type: {
      name: "Boolean"
    }
  }
};
export const allVersions: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "allVersions"
  ],
  mapper: {
    serializedName: "allVersions",
    type: {
      name: "Boolean"
    }
  }
};
export const author: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "author"
  ],
  mapper: {
    serializedName: "author",
    type: {
      name: "String"
    }
  }
};
export const authorEmail: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "authorEmail"
  ],
  mapper: {
    serializedName: "authorEmail",
    type: {
      name: "String"
    }
  }
};
export const baseAddress: msRest.OperationURLParameter = {
  parameterPath: "baseAddress",
  mapper: {
    required: true,
    serializedName: "baseAddress",
    type: {
      name: "String"
    }
  }
};
export const checkLatest: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "checkLatest"
  ],
  mapper: {
    serializedName: "checkLatest",
    type: {
      name: "Boolean"
    }
  }
};
export const deleteWebRoot: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "deleteWebRoot"
  ],
  mapper: {
    serializedName: "deleteWebRoot",
    type: {
      name: "Number"
    }
  }
};
export const deployer: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "deployer"
  ],
  mapper: {
    serializedName: "deployer",
    type: {
      name: "String"
    }
  }
};
export const dumpType: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "dumpType"
  ],
  mapper: {
    serializedName: "dumpType",
    type: {
      name: "Number"
    }
  }
};
export const ensurePublicKey: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "ensurePublicKey"
  ],
  mapper: {
    serializedName: "ensurePublicKey",
    type: {
      name: "String"
    }
  }
};
export const feedUrl: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "feedUrl"
  ],
  mapper: {
    serializedName: "feedUrl",
    type: {
      name: "String"
    }
  }
};
export const filter: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "filter"
  ],
  mapper: {
    serializedName: "filter",
    type: {
      name: "String"
    }
  }
};
export const format: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "format"
  ],
  mapper: {
    serializedName: "format",
    type: {
      name: "String"
    }
  }
};
export const hookEventType: msRest.OperationURLParameter = {
  parameterPath: "hookEventType",
  mapper: {
    required: true,
    serializedName: "hookEventType",
    type: {
      name: "String"
    }
  }
};
export const id0: msRest.OperationURLParameter = {
  parameterPath: "id",
  mapper: {
    required: true,
    serializedName: "id",
    type: {
      name: "String"
    }
  }
};
export const id1: msRest.OperationURLParameter = {
  parameterPath: "id",
  mapper: {
    required: true,
    serializedName: "id",
    type: {
      name: "Number"
    }
  }
};
export const ignoreErrors: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "ignoreErrors"
  ],
  mapper: {
    serializedName: "ignoreErrors",
    type: {
      name: "Number"
    }
  }
};
export const iisProfiling: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "iisProfiling"
  ],
  mapper: {
    serializedName: "iisProfiling",
    type: {
      name: "Boolean"
    }
  }
};
export const includeAppSettings: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "includeAppSettings"
  ],
  mapper: {
    serializedName: "includeAppSettings",
    type: {
      name: "Boolean"
    }
  }
};
export const includeCsproj: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "includeCsproj"
  ],
  mapper: {
    serializedName: "includeCsproj",
    type: {
      name: "Boolean"
    }
  }
};
export const isAsync: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "isAsync"
  ],
  mapper: {
    serializedName: "isAsync",
    type: {
      name: "Boolean"
    }
  }
};
export const jobName: msRest.OperationURLParameter = {
  parameterPath: "jobName",
  mapper: {
    required: true,
    serializedName: "jobName",
    type: {
      name: "String"
    }
  }
};
export const key: msRest.OperationURLParameter = {
  parameterPath: "key",
  mapper: {
    required: true,
    serializedName: "key",
    type: {
      name: "String"
    }
  }
};
export const logId: msRest.OperationURLParameter = {
  parameterPath: "logId",
  mapper: {
    required: true,
    serializedName: "logId",
    type: {
      name: "String"
    }
  }
};
export const message: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "message"
  ],
  mapper: {
    serializedName: "message",
    type: {
      name: "String"
    }
  }
};
export const name: msRest.OperationURLParameter = {
  parameterPath: "name",
  mapper: {
    required: true,
    serializedName: "name",
    type: {
      name: "String"
    }
  }
};
export const path: msRest.OperationURLParameter = {
  parameterPath: "path",
  mapper: {
    required: true,
    serializedName: "path",
    type: {
      name: "String"
    }
  }
};
export const processId: msRest.OperationURLParameter = {
  parameterPath: "processId",
  mapper: {
    required: true,
    serializedName: "processId",
    type: {
      name: "Number"
    }
  }
};
export const recursive: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "recursive"
  ],
  mapper: {
    serializedName: "recursive",
    type: {
      name: "Boolean"
    }
  }
};
export const request: msRest.OperationQueryParameter = {
  parameterPath: "request",
  mapper: {
    required: true,
    serializedName: "request",
    type: {
      name: "String"
    }
  }
};
export const runId: msRest.OperationURLParameter = {
  parameterPath: "runId",
  mapper: {
    required: true,
    serializedName: "runId",
    type: {
      name: "String"
    }
  }
};
export const service: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "service"
  ],
  mapper: {
    serializedName: "service",
    type: {
      name: "String"
    }
  }
};
export const threadId: msRest.OperationURLParameter = {
  parameterPath: "threadId",
  mapper: {
    required: true,
    serializedName: "threadId",
    type: {
      name: "Number"
    }
  }
};
export const top: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "top"
  ],
  mapper: {
    serializedName: "top",
    type: {
      name: "Number"
    }
  }
};
export const version: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "version"
  ],
  mapper: {
    serializedName: "version",
    type: {
      name: "String"
    }
  }
};
export const trackDeploymentId: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "trackDeploymentId"
  ],
  mapper: {
    serializedName: "trackDeploymentId",
    type: {
      name: "Boolean"
    }
  }
};