# Trigger the build whenever `main` is updated
trigger:
  - main
  - rel/*

# Disable PR trigger
pr: none

# Scheduled nightly build
schedules:
  - cron: "0 0 * * *"
    displayName: Nightly scheduled build
    always: false # Don't rebuild if there haven't been changes
    branches:
      include:
        - main

# `resources` specifies the location of templates to pick up, use it to get 1ES and AzExt templates
resources:
  repositories:
    - repository: 1esPipelines
      type: git
      name: 1ESPipelineTemplates/1ESPipelineTemplates
      ref: refs/tags/release

parameters:
  - name: PackageToBuild
    displayName: Package to Build
    type: string
    default: "all"
    values:
      - all
      - microsoft-vscode-azext-azureappservice
      - microsoft-vscode-azext-azureappsettings
      - microsoft-vscode-azext-azureauth
      - microsoft-vscode-azext-azureutils
      - microsoft-vscode-azext-dev
      - microsoft-eslint-config-azuretools
      - microsoft-vscode-azext-github
      - microsoft-vscode-azext-serviceconnector
      - microsoft-vscode-azext-utils

# Use the templates
extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1esPipelines
  parameters:
    sdl:
      credscan:
        suppressionsFile: $(Build.SourcesDirectory)\.azure-pipelines\compliance\CredScanSuppressions.json
    pool:
      name: VSEngSS-MicroBuild2022-1ES # Name of your hosted pool
      image: server2022-microbuildVS2022-1es # Name of the image in your pool. If not specified, first image of the pool is used
      os: windows # OS of the image. Allowed values: windows, linux, macOS
    stages:
      # Execute stages from the AzExt template
      - template: ../azure-pipelines/1esjobs.yml
        parameters:
          jobs:
            - ${{ if or(eq(parameters.PackageToBuild, 'microsoft-vscode-azext-azureappservice'), eq(parameters.PackageToBuild, 'all')) }}:
              - name: appservice
                working_directory: appservice
            - ${{ if or(eq(parameters.PackageToBuild, 'microsoft-vscode-azext-azureappsettings'), eq(parameters.PackageToBuild, 'all')) }}:
              - name: appsettings
                working_directory: appsettings
            - ${{ if or(eq(parameters.PackageToBuild, 'microsoft-vscode-azext-azureauth'), eq(parameters.PackageToBuild, 'all')) }}:
              - name: auth
                working_directory: auth
            - ${{ if or(eq(parameters.PackageToBuild, 'microsoft-vscode-azext-azureutils'), eq(parameters.PackageToBuild, 'all')) }}:
              - name: azure
                working_directory: azure
            - ${{ if or(eq(parameters.PackageToBuild, 'microsoft-vscode-azext-dev'), eq(parameters.PackageToBuild, 'all')) }}:
              - name: dev
                working_directory: dev
            - ${{ if or(eq(parameters.PackageToBuild, 'microsoft-eslint-config-azuretools'), eq(parameters.PackageToBuild, 'all')) }}:
              - name: eslint_config_azuretools
                working_directory: eslint-config-azuretools
            - ${{ if or(eq(parameters.PackageToBuild, 'microsoft-vscode-azext-github'), eq(parameters.PackageToBuild, 'all')) }}:
              - name: github
                working_directory: github
            - ${{ if or(eq(parameters.PackageToBuild, 'microsoft-vscode-azext-serviceconnector'), eq(parameters.PackageToBuild, 'all')) }}:
              - name: serviceconnector
                working_directory: serviceconnector
            - ${{ if or(eq(parameters.PackageToBuild, 'microsoft-vscode-azext-utils'), eq(parameters.PackageToBuild, 'all')) }}:
              - name: utils
                working_directory: utils
