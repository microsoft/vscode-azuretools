parameters:
  - name: PackageToPublish
    displayName: Package to Publish
    type: string
  - name: PipelineDefinition
    displayName: Pipeline Definition ID
    type: number

jobs:
  - job: Release
    pool:
      vmImage: ubuntu-latest
    steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          buildType: "specific"
          project: "AzCode"
          definition: ${{ parameters.PipelineDefinition }}
          buildVersionToDownload: "latestFromBranch"
          branchName: "refs/heads/main"
          targetPath: $(System.DefaultWorkingDirectory)
      - task: CmdLine@2
        displayName: Validate Artifact
        inputs:
          script: |
            echo find . -type f -iname "${{ parameters.PackageToPublish }}*.tgz"
            TarballPath=`find . -type f -iname "${{ parameters.PackageToPublish }}*.tgz"`
            if [[ $TarballPath =~ ((microsoft|vscode)-.*)-([0-9]+\.[0-9]+\.[0-9]+) ]]; then
              echo "##vso[task.setvariable variable=PackageName]${BASH_REMATCH[1]}"
              echo "##vso[task.setvariable variable=Version]${BASH_REMATCH[3]}"
              echo "##vso[task.setvariable variable=TarballPath]$TarballPath"
            else
              echo "Failed to parse tarball path \"$TarballPath\""
              exit 1
            fi
          workingDirectory: $(System.DefaultWorkingDirectory)
      - task: CmdLine@2
        displayName: Create .npmrc
        inputs:
          script: echo "registry=https://registry.npmjs.org" >> .npmrc
          workingDirectory: $(System.DefaultWorkingDirectory)
      - task: npmAuthenticate@0
        displayName: "npm Authenticate"
        inputs:
          workingFile: "$(System.DefaultWorkingDirectory)/.npmrc"
          customEndpoint: "npm token"
      - task: CmdLine@2
        displayName: NPM Publish
        inputs:
          script: npm --userconfig .npmrc publish --access public --dry-run '$(System.DefaultWorkingDirectory)/$(TarballPath)'
      - task: GitHubRelease@1
        displayName: "GitHub release (create)"
        inputs:
          gitHubConnection: "AzCode-Bot"
          tagSource: userSpecifiedTag
          tag: "$(PackageName)-v$(Version)"
          title: "$(PackageName) v$(Version)"
          releaseNotesSource: inline
          # assets: "$(System.DefaultWorkingDirectory)/$(TarballPath)"
          isDraft: true
          isPreRelease: true
          addChangeLog: false
