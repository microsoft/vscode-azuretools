parameters:
  - name: PackageToPublish
    displayName: Package to Publish
    type: string
  - name: PipelineDefinition
    displayName: Pipeline Definition ID
    type: number
  - name: BranchToPublish
    displayName: Branch to Publish
    type: string
    default: "refs/heads/main"
  - name: OwnerAlias
    displayName: Owner Alias
    type: string
  - name: ApproverAlias
    displayName: Approver Alias
    type: string

resources:
  repositories:
    - repository: MicroBuildTemplate
      type: git
      name: MicroBuildTemplates/MicroBuildTemplates
      ref: refs/heads/release

jobs:
  - job: Release
    pool:
      vmImage: ubuntu-latest
    steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          buildType: "specific"
          project: "DevDiv"
          definition: ${{ parameters.PipelineDefinition }}
          buildVersionToDownload: "latestFromBranch"
          branchName: ${{ parameters.BranchToPublish }}
          targetPath: $(System.DefaultWorkingDirectory)
          itemPattern: "**/*.tgz"
      - task: CmdLine@2
        displayName: Validate Artifact
        inputs:
          script: |
            TarballPath=`find . -type f -iname "${{ parameters.PackageToPublish }}*.tgz"`
            if [[ $TarballPath =~ ((microsoft|vscode)-.*)-([0-9]+\.[0-9]+\.[0-9]+) ]]; then
              echo "##vso[task.setvariable variable=Version]${BASH_REMATCH[3]}"
              echo "##vso[task.setvariable variable=TarballPath]$TarballPath"
              echo "##vso[task.setvariable variable=TarballFolder]$(dirname "$TarballPath")"
              echo "Found tarball \"$(basename "$TarballPath")\" in folder \"$(dirname "$TarballPath")\""
            else
              echo "Failed to parse tarball path \"$TarballPath\""
              exit 1
            fi
          workingDirectory: $(System.DefaultWorkingDirectory)
      - template: azure-pipelines/MicroBuild.Publish.yml@MicroBuildTemplate
        parameters:
          intent: "PackageDistribution"
          contentType: "npm"
          contentSource: "Folder"
          folderLocation: "$(System.DefaultWorkingDirectory)/$(TarballFolder)"
          waitForReleaseCompletion: true
          owners: "${{ parameters.OwnerAlias }}@microsoft.com"
          approvers: "${{ parameters.ApproverAlias }}@microsoft.com"
      - task: GitHubRelease@1
        displayName: "GitHub release (create)"
        inputs:
          gitHubConnection: "GitHub-AzureTools"
          tagSource: userSpecifiedTag
          tag: "${{ parameters.PackageToPublish }}-v$(Version)"
          title: "${{ parameters.PackageToPublish }} v$(Version)"
          releaseNotesSource: inline
          assets: "$(System.DefaultWorkingDirectory)/$(TarballPath)"
          isDraft: true
          isPreRelease: true
          addChangeLog: false
    variables:
      skipComponentGovernanceDetection: true # The release pipeline does not need CG detection since the primary build pipeline has it
      Codeql.Enabled: false # Disable CodeQL because it is not needed for NPM release
