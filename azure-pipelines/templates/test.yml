variables:
  ${{ if eq(variables['Build.Reason'], 'Schedule') }}:
    AzCode_UseAzureFederatedCredentials: true
    ENABLE_COMPLIANCE: true

steps:
  # This gives the AzCodeE2ETests service connection access to this pipeline.
  - task: AzureKeyVault@1
    displayName: 'Authorize AzCodeE2ETests service connection'
    inputs:
      azureSubscription: 'AzCodeE2ETests'
      KeyVaultName: 'AzCodeE2ETestsDummyKV'
    condition: eq($(AzCode_UseAzureFederatedCredentials), true)
    env:
      SYSTEM_ACCESSTOKEN: $(System.AccessToken)

  # This task obtains the values necessary to connect to the AzCodeE2ETests service connection from the AzCodeE2ETestsCredKV key vault.
  - task: AzureKeyVault@2
    displayName: 'Get AzCodeE2ETests service connection secrets'
    inputs:
      azureSubscription: 'AzCodeE2ETestsCreds'
      KeyVaultName: 'AzCodeE2ETestsCredsKV'
      SecretsFilter: 'AzCodeServiceConnectionID, AzCodeServiceConnectionDomain, AzCodeServiceConnectionClientID'
      RunAsPreJob: true
    condition: eq($(AzCode_UseAzureFederatedCredentials), true)
    env:
      SYSTEM_ACCESSTOKEN: $(System.AccessToken)

  - task: Npm@1
    displayName: "\U0001F449 Test"
    inputs:
      command: custom
      customCommand: test
      workingDir: $(working_directory)
    condition: succeeded()
    env:
      DISPLAY: :99 # Only necessary for linux tests
      SYSTEM_ACCESSTOKEN: $(System.AccessToken)
      AzCodeServiceConnectionID: $(AzCodeServiceConnectionID)
      AzCodeServiceConnectionDomain: $(AzCodeServiceConnectionDomain)
      AzCodeServiceConnectionClientID: $(AzCodeServiceConnectionClientID)
